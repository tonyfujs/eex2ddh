full_list$oldest_timestamp <- ave(full_list$ddh_created, full_list$eex_internal_id, FUN = min)
full_list$duplicate_status <- ifelse(full_list$ddh_created == full_list$oldest_timestamp, "original", "duplicate")
full_list$oldest_timestamp <- NULL
View(full_list)
master <- get_ddh_records_status()
get_url()
root_url
master <- get_ddh_records_status()
#TEMPORARY LOGIN
dkanr::dkanr_setup(url = "http://ddh1stg.prod.acquia-sites.com/",
username = "dec_api_aa",
password = "*42wW9&W")
#TEMPORARY LOGIN
dkanr::dkanr_setup(url = "http://ddh1stg.prod.acquia-sites.com/",
username = "dec_api_aa",
password = "*42wW9&W")
#TEMPORARY LOGIN
dkanr::dkanr_setup(url = "http://ddh1stg.prod.acquia-sites.com/",
username = "dec_api_aa",
password = "*42wW9&W")
#TEMPORARY LOGIN
dkanr::dkanr_setup(url = "http://ddh1stg.prod.acquia-sites.com/",
username = "dec_api_aa",
password = "*42wW9&W")
#TEMPORARY LOGIN
dkanr::dkanr_setup(url = "http://ddh1stg.prod.acquia-sites.com/",
username = "dec_api_aa",
password = "*42wW9&W")
#TEMPORARY LOGIN
dkanr::dkanr_setup(url = "http://ddh1stg.prod.acquia-sites.com/",
username = "dec_api_aa",
password = "*42wW9&W")
#TEMPORARY LOGIN
dkanr::dkanr_setup(url = "http://ddh1stg.prod.acquia-sites.com/",
username = "dec_api_aa",
password = "*42wW9&W")
#TEMPORARY LOGIN
dkanr::dkanr_setup(url = "http://ddh1stg.prod.acquia-sites.com/",
username = "dec_api_aa",
password = "*42wW9&W")
devtools::document()
library(dkanr)
get_url()
master <- get_ddh_records_status()
master <- get_ddh_records_status()
master <- get_ddh_records_status()
# Subset the DDH catalog for the eex datasets
ddh_df              <- get_eex_from_ddh_datasets(root_url = root_url, credentials = credentials)
eex_datasets <- ddhconnect::search_catalog(
fields = c(
"nid",
"field_ddh_harvest_src",
"field_ddh_harvest_sys_id",
"field_wbddh_modified_date",
"created"
),
filters = c(
"field_ddh_harvest_src" = "1014",
"type" = "dataset"
),
credentials = credentials,
root_url = root_url
)
fields = c(
"nid",
"field_ddh_harvest_src",
"field_ddh_harvest_sys_id",
"field_wbddh_modified_date",
"created"
)
credentials = list(cookie = dkanr::get_cookie(),
token = dkanr::get_token())
eex_datasets <- ddhconnect::search_catalog(
fields = c(
"nid",
"field_ddh_harvest_src",
"field_ddh_harvest_sys_id",
"field_wbddh_modified_date",
"created"
),
filters = c(
"field_ddh_harvest_src" = "1014",
"type" = "dataset"
),
credentials = credentials,
root_url = root_url
)
root_url
library(dkanr)
#TEMPORARY LOGIN
dkanr::dkanr_setup(url = "http://ddh1stg.prod.acquia-sites.com/",
username = "dec_api_aa",
password = "*42wW9&W")
devtools::document()
master <- get_ddh_records_status()
setwd("C:/Users/WB525812/cmder/Git Repos/ddhconnect")
devtools::document()
fields = c(
"nid",
"field_ddh_harvest_src",
"field_ddh_harvest_sys_id",
"field_wbddh_modified_date",
"created"
)
filters = c(
"field_ddh_harvest_src" = "1014",
"type" = "dataset"
)
credentials = credentials
root_url = dkanr::get_url()
credentials = list(cookie = dkanr::get_cookie(),
token = dkanr::get_token())
# Build queries
query_count <- build_search_query(fields = fields,
filters = filters,
limit = 1)
query <- build_search_query(fields = fields,
filters = filters,
limit = limit)
limit = 200
# Build queries
query_count <- build_search_query(fields = fields,
filters = filters,
limit = 1)
query <- build_search_query(fields = fields,
filters = filters,
limit = limit)
# get a count datasets
count <- search_ddh(query = query_count,
root_url = root_url,
credentials = credentials)
count <- as.numeric(count$count)
# get a count datasets
count <- search_ddh(query = query_count,
root_url = root_url,
credentials = credentials)
cookie <- credentials$cookie
token <- credentials$token
# Build url
path <- "search-service/search_api/datasets"
url <- httr::modify_url(root_url, path = path, query = query)
url
# Send request
out <- httr::GET(url = url,
httr::add_headers(.headers = c("Content-Type" = "application/json",
"charset" = "utf-8",
"Cookie" =  cookie,
"X-CSRF-Token" = token)),
encode = "json")
ouut
out
ddhconnect::search_catalog(fields="nid", filters = c("title" = "Test"))
logout_ddh()
dkanr_setup(url = "https://datacatalog.worldbank.org",
username = "dec_api_aa",
password = "*42wW9&W")
# Subset the DDH catalog for the eex datasets
ddh_df              <- get_eex_from_ddh_datasets()
ddh_df
logout_ddh()
logout_ddh()
dkanr_setup(url = "https://datacatalog.worldbank.org",
username = "dec_api_aa",
password = "*42wW9&W")
# Subset the DDH catalog for the eex datasets
ddh_df              <- get_eex_from_ddh_datasets()
logout_ddh()
#TEMPORARY LOGIN
dkanr::dkanr_setup(url = "http://ddh1stg.prod.acquia-sites.com/",
username = "dec_api_aa",
password = "*42wW9&W")
# Subset the DDH catalog for the eex datasets
ddh_df              <- get_eex_from_ddh_datasets()
# Subset the DDH catalog for the eex datasets
ddh_df              <- get_eex_from_ddh_datasets()
get_url()
head(ddh_df)
#TEMPORARY LOGIN
dkanr::dkanr_setup(url = "http://ddh1stg.prod.acquia-sites.com/",
username = "dec_api_aa",
password = "*42wW9&W")
library(dkanr)
setwd("C:/Users/WB525812/cmder/Git Repos/eex2ddh")
devtools::document()
get_url()
master <- get_ddh_records_status()
View(master)
ddhconnect::delete_dataset(145380)
master <- get_ddh_records_status()
View(master)
get_url()
add_new_dataset(metadata_list = extract_eex_metadata("d4073304-03ba-4e38-979b-513c59840dc9"))
debugonce(add_new_dataset)
add_new_dataset(metadata_list = extract_eex_metadata("d4073304-03ba-4e38-979b-513c59840dc9"))
metadata_dataset
metadata_list$license_title
metadata_dataset$field_license_wbddh
metadata_dataset$field_wbddh_collaborator_upi
debugonce(add_new_dataset)
add_new_dataset(metadata_list = extract_eex_metadata("d4073304-03ba-4e38-979b-513c59840dc9"))
output
output
debugonce(add_new_dataset)
add_new_dataset(metadata_list = extract_eex_metadata("d4073304-03ba-4e38-979b-513c59840dc9"))
eex_fields
free_text_lkup
output$field_wbddh_modified_date
output$field_wbddh_release_date
output
temp
unlist(temp)
devtools::document()
debugonce(add_new_dataset)
add_new_dataset(metadata_list = extract_eex_metadata("d4073304-03ba-4e38-979b-513c59840dc9"))
output
metadata_dataset
json_dat
debugonce(add_new_dataset)
add_new_dataset(metadata_list = extract_eex_metadata("d4073304-03ba-4e38-979b-513c59840dc9"))
debugonce(add_new_dataset)
add_new_dataset(metadata_list = extract_eex_metadata("d4073304-03ba-4e38-979b-513c59840dc9"))
debugonce(add_new_dataset)
add_new_dataset(metadata_list = extract_eex_metadata("d4073304-03ba-4e38-979b-513c59840dc9"))
debugonce(add_new_dataset)
add_new_dataset(metadata_list = extract_eex_metadata("d4073304-03ba-4e38-979b-513c59840dc9"))
Q
debugonce(add_new_dataset)
add_new_dataset(metadata_list = extract_eex_metadata("d4073304-03ba-4e38-979b-513c59840dc9"))
unlist(strsplit(constant_metadata[i,]$list_value_name,","))
(strsplit(constant_metadata[i,]$list_value_name,",")
strsplit(constant_metadata[i,]$list_value_name,",")
strsplit(constant_metadata[i,]$list_value_name,",") %>% trimws()
strsplit(constant_metadata[i,]$list_value_name,", ")
devtools::document()
devtools::document()
add_new_dataset(metadata_list = extract_eex_metadata("d4073304-03ba-4e38-979b-513c59840dc9"))
View(master)
View(dataset_master_lookup)
library(ddhconnect)
get_metadata(214311)
meta <- get_metadata(214311)
meta$field_wbddh_collaborator_upi
debugonce(test_created_dataset)
add_new_dataset(metadata_list = extract_eex_metadata("d4073304-03ba-4e38-979b-513c59840dc9"))
metadata_list = extract_eex_metadata("d4073304-03ba-4e38-979b-513c59840dc9")
add_new_dataset(metadata_list = extract_eex_metadata("d4073304-03ba-4e38-979b-513c59840dc9"))
search_catalog(fields = "nid", filters = c("title" = "MInGov Botswana"))
search_catalog(fields = "nid", filters = c("title" = "MInGov"))
input <- add_new_dataset(metadata_list = extract_eex_metadata("d4073304-03ba-4e38-979b-513c59840dc9"))
resp_dat$nid <- 214356
nid = 214356
root_url = dkanr::get_url()
credentials = list(cookie = dkanr::get_cookie(),
token = dkanr::get_token())
metadata_dataset_test <- get_metadata(nid)
metadata_list = extract_eex_metadata("d4073304-03ba-4e38-979b-513c59840dc9"
metadata_list = extract_eex_metadata("d4073304-03ba-4e38-979b-513c59840dc9")
safe_see_if(dataset_metadata$workbench_moderation$current$published, "1", "status")
# Format raw metadata for Dataset
metadata_dataset  <- map_eex_metadata_dataset(metadata_list)
# Map external metadata for Dataset
metadata_dataset  <- map_external_metadata(metadata_list, metadata_dataset)
# Format raw metadata for Resources
metadata_resources <- map_eex_metadata_resource(metadata_list, lovs)
ddh_fields = ddhconnect::get_fields()
lovs = ddhconnect::get_lovs()
# Format raw metadata for Dataset
metadata_dataset  <- map_eex_metadata_dataset(metadata_list)
# Map external metadata for Dataset
metadata_dataset  <- map_external_metadata(metadata_list, metadata_dataset)
# Format raw metadata for Resources
metadata_resources <- map_eex_metadata_resource(metadata_list, lovs)
# Add Data Type to Dataset
metadata_dataset$field_wbddh_data_type   <- metadata_resources$field_wbddh_data_type
metadata_resources$field_wbddh_data_type <- NULL
root_url
get_url()
safe_see_if(dataset_metadata$workbench_moderation$current$published, "1", "status")
dataset_metadata <- metadata_dataset
safe_see_if(dataset_metadata$workbench_moderation$current$published, "1", "status")
safe_see_if(dataset_metadata$title, metadata_list$title, "title")
safe_see_if(dataset_metadata$field_wbddh_dsttl_upi$und[[1]]$target_id, metadata_list$field_wbddh_dsttl_upi, "field_wbddh_dsttl_upi")
dataset_metadata <- metadata_dataset_test
dataset_metadata = metadata_dataset_test
metadata_list = metadata_dataset
safe_see_if(dataset_metadata$workbench_moderation$current$published, "1", "status")
safe_see_if(dataset_metadata$title, metadata_list$title, "title")
safe_see_if(dataset_metadata$field_wbddh_dsttl_upi$und[[1]]$target_id, metadata_list$field_wbddh_dsttl_upi, "field_wbddh_dsttl_upi")
safe_see_if(dataset_metadata$field_wbddh_collaborator_upi$und[[1]]$target_id, metadata_list$field_wbddh_collaborator_upi[[1]], "field_wbddh_collaborator_upi")
metadata_list$field_wbddh_collaborator_upi
safe_see_if(dataset_metadata$field_wbddh_collaborator_upi$und[[1]]$target_id, metadata_list$field_wbddh_collaborator_upi[[1]], "field_wbddh_collaborator_upi")
safe_see_if(dataset_metadata$field_wbddh_collaborator_upi$und[[2]]$target_id, metadata_list$field_wbddh_collaborator_upi[[2]], "field_wbddh_collaborator_upi")
devtools::document()
add_new_dataset(metadata_list = extract_eex_metadata("d4073304-03ba-4e38-979b-513c59840dc9"))
metadata_list = extract_eex_metadata("d4073304-03ba-4e38-979b-513c59840dc9")
metadata_list$country_code
metadata_list$country_code[[1]]
metadata_list$country_code[[1]] <- "FAIL"
metadata_list$country_code[[2]] <- "FAIL2"
metadata_list$region
metadata_list$region[[1]]   <- "FAIL3"
metadata_list$region
metadata_list$country_code
# Format raw metadata for Dataset
metadata_dataset  <- map_eex_metadata_dataset(metadata_list)
# Map external metadata for Dataset
metadata_dataset  <- map_external_metadata(metadata_list, metadata_dataset)
# Format raw metadata for Resources
metadata_resources <- map_eex_metadata_resource(metadata_list, lovs)
# Add Data Type to Dataset
metadata_dataset$field_wbddh_data_type   <- metadata_resources$field_wbddh_data_type
metadata_resources$field_wbddh_data_type <- NULL
metadata_dataset
# Create Dataset
json_dat <- ddhconnect::create_json_dataset(values = metadata_dataset,
publication_status = "published",
ddh_fields = ddh_fields,
lovs = lovs,
root_url = root_url)
resp_dat <- ddhconnect::create_dataset(body = json_dat,
root_url = root_url,
credentials = credentials)
metadata_list = extract_eex_metadata("d4073304-03ba-4e38-979b-513c59840dc9")
metadata_list$license_title
metadata_list$license_title[[1]] <- "FAIL LICENSE"
metadata_list$license_title
# Format raw metadata for Dataset
metadata_dataset  <- map_eex_metadata_dataset(metadata_list)
# Map external metadata for Dataset
metadata_dataset  <- map_external_metadata(metadata_list, metadata_dataset)
# Format raw metadata for Resources
metadata_resources <- map_eex_metadata_resource(metadata_list, lovs)
# Add Data Type to Dataset
metadata_dataset$field_wbddh_data_type   <- metadata_resources$field_wbddh_data_type
metadata_resources$field_wbddh_data_type <- NULL
metadata_dataset
# Create Dataset
json_dat <- ddhconnect::create_json_dataset(values = metadata_dataset,
publication_status = "published",
ddh_fields = ddh_fields,
lovs = lovs,
root_url = root_url)
resp_dat <- ddhconnect::create_dataset(body = json_dat,
root_url = root_url,
credentials = credentials)
metadata_list = extract_eex_metadata("d4073304-03ba-4e38-979b-513c59840dc9")
metadata_list$resources[[1]]$format
metadata_list$resources[[1]]$format <- "GeoJSON"
metadata_list$resources[[1]]$format
# Format raw metadata for Dataset
metadata_dataset  <- map_eex_metadata_dataset(metadata_list)
# Map external metadata for Dataset
metadata_dataset  <- map_external_metadata(metadata_list, metadata_dataset)
# Format raw metadata for Resources
metadata_resources <- map_eex_metadata_resource(metadata_list, lovs)
# Add Data Type to Dataset
metadata_dataset$field_wbddh_data_type   <- metadata_resources$field_wbddh_data_type
metadata_resources$field_wbddh_data_type <- NULL
metadata_dataset
# Create Dataset
json_dat <- ddhconnect::create_json_dataset(values = metadata_dataset,
publication_status = "published",
ddh_fields = ddh_fields,
lovs = lovs,
root_url = root_url)
resp_dat <- ddhconnect::create_dataset(body = json_dat,
root_url = root_url,
credentials = credentials)
View(get_ddh_records_status())
debugonce(update_existing_dataset)
update_existing_dataset(metadata_list = extract_eex_metadata("d4073304-03ba-4e38-979b-513c59840dc9"))
dataset_nid
debugonce(update_existing_dataset)
devtools::document()
debugonce(update_existing_dataset)
update_existing_dataset(metadata_list = extract_eex_metadata("d4073304-03ba-4e38-979b-513c59840dc9"))
dataset_nid
resp_dat
resource_nid
harv_ids
new
current
old
metadata_resources[[i]]$field_ddh_harvest_sys_id
names(current[current %in% metadata_resources[[i]]$field_ddh_harvest_sys_id])
i
metadata_resources[[i]]$field_ddh_harvest_sys_id
names(current[current %in% metadata_resources[[i]]$field_ddh_harvest_sys_id])
debugonce(update_existing_dataset)
update_existing_dataset(metadata_list = extract_eex_metadata("d4073304-03ba-4e38-979b-513c59840dc9"))
dataset_nid
resource_nid
harv_ids
new
current
old
length(old)
debugonce(update_existing_dataset)
debugonce(update_existing_dataset)
update_existing_dataset(metadata_list = extract_eex_metadata("d4073304-03ba-4e38-979b-513c59840dc9"))
harv_ids
new
current
old
debugonce(update_existing_dataset)
update_existing_dataset(metadata_list = extract_eex_metadata("d4073304-03ba-4e38-979b-513c59840dc9"))
harv_ids
new
old
debugonce(update_existing_dataset)
update_existing_dataset(metadata_list = extract_eex_metadata("d4073304-03ba-4e38-979b-513c59840dc9"))
harv_ids
current
new
old
devtools::document()
token <- "2d451b91-95d0-4177-98fc-a4e3b0a4fd12"
root <- "https://energydata.staging.derilinx.com"
path <- "/api/3/action/package_search?fq=eex_user_origin:True%20organization:world-bank-grou"
# Build request URL
url   <- httr::modify_url(root, path = path, query = query)
query = NULL
# Build request URL
url   <- httr::modify_url(root, path = path, query = query)
url
# Send request to API
resp  <- httr::GET(url,
httr::add_headers(.headers = c('X-API-KEY' = token,
'charset' = "utf-8")),
httr::accept_json())
resp
# Return useful message on error
httr::stop_for_status(resp, task = 'complete request to Energy Info API\n')
# CHECK: datatype is .JSON
if (httr::http_type(resp) != "application/json") {
stop("API did not return json", call. = FALSE)
}
# Parse response
parsed <- jsonlite::fromJSON(httr::content(resp, "text"), simplifyVector = FALSE)
parsed
path <- "/api/3/action/package_search?fq=eex_user_origin:True%20organization:world-bank-grou"
query = NULL
path <- "/api/3/action/package_search?fq=eex_user_origin:True%20organization:world-bank-grou"
root <- "https://energydata.staging.derilinx.com"
token <- "2d451b91-95d0-4177-98fc-a4e3b0a4fd12"
devtools::document()
get_url()
eex_df <- get_eex_datasets()
nrow(eex_df)
View(eex_df)
devtools::document()
master <- get_ddh_records_status()
View(master)
devtools::document()
master <- get_ddh_records_status()
View(master)
devtools::document()
old <- get_ddh_records_status()
nrow(old)
devtools::document()
origin_false_df <- get_eex_datasets(origin = TRUE)
nrow(origin_false_df)
origin <- TRUE
paste0("/api/3/action/package_search?fq=eex_user_origin:",origin,"%20organization:world-bank-grou&rows=1000")
origin_false_df <- get_eex_datasets(origin = "False")
nrow(origin_false_df)
origin_true_df <- get_eex_datasets(origin = "True")
nrow(origin_true_df)
head(origin_true_df)
View(origin_false_df)
full_join(origin_false_df,origin_true_df, by = "eex_internal_id")
left_join(origin_false_df,origin_true_df, by = "eex_internal_id")
intersect(origin_false_df, origin_true_df)
?intersect
inner_join(origin_false_df, origin_true_df)
inner_join(origin_false_df, origin_true_df, by = "eex_internal_id")
root_url = dkanr::get_url()
credentials = list(cookie = dkanr::get_cookie(),
token = dkanr::get_token())
# Subset the DDH catalog for the eex datasets
ddh_df              <- get_eex_from_ddh_datasets(root_url = root_url, credentials = credentials)
ddh_df$ddh_updated  <- as.numeric(lubridate::ymd_hms(ddh_df$ddh_updated))
# EEX harvest
# EEX origin False (i.e datasets not to harvest)
eex_origin_false_df <- get_eex_datasets(origin = "False")
# Remove origin false datasets from DDH dataframe
dplyr::anti_join(ddh_df, eex_origin_false_df,  by = "eex_internal_id")
devtools::document()
devtools::document()
get_url()
master <- get_ddh_records_status()
View(master)
# Subset the DDH catalog for the eex datasets
ddh_df              <- get_eex_from_ddh_datasets(root_url = root_url, credentials = credentials)
root_url = dkanr::get_url()
credentials = list(cookie = dkanr::get_cookie(),
token = dkanr::get_token())
# Subset the DDH catalog for the eex datasets
ddh_df              <- get_eex_from_ddh_datasets(root_url = root_url, credentials = credentials)
ddh_df$ddh_updated  <- as.numeric(lubridate::ymd_hms(ddh_df$ddh_updated))
head(ddh_df)
# EEX harvest
# EEX origin False (i.e datasets not to harvest)
eex_origin_false_df <- get_eex_datasets(origin = "False")
head(eex_origin_false_df)
nrow(eex_origin_false_df)
nrow(ddh_df)
# Remove origin false datasets from DDH dataframe
ddh_df <- dplyr::anti_join(ddh_df, eex_origin_false_df,  by = "eex_internal_id")
nrow(ddh_df)
master <- get_ddh_records_status()
View(master)
