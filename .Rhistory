download.file("https://www.bbc.com/news", destfile = "test.html")
knitr::opts_chunk$set(echo = TRUE)
# dkanr_setup(url = "https://datacatalog.worldbank.org",
#             username = "dec_api_aa",
#             password = "*42wW9&W")
dkanr::dkanr_setup(url = "http://ddh1stg.prod.acquia-sites.com/",
username = "dec_api_aa",
password = "*42wW9&W")
library(ddhconnect)
search_catalog(fields = "nid", filters = c("title" = "TEST ALP"))
search_catalog(fields = "nid", filters = c("title" = "alp"))
search_catalog(fields = "nid", filters = c("title" = "ALP"))
search_catalog(fields = "nid", filters = c("title" = "test"))
dkanr::get_url()
search_catalog(fields = "nid", filters = c("title" = "divyanshi"))
search_catalog(fields = "nid", filters = c("titlase" = "divyanshi"))
search_catalog(fields = "nid", filters = c("title" = "divyanshi"))
status_lookup <-
mdlibtoddh::get_ddh_records_status(mdlib_token = Sys.getenv('mdlib_token')) %>%
tibble::rownames_to_column(var = "row_num")
library(mdlibtoddh)
library(dplyr)
library(tibble)
library(dkanr)
library(ddhconnect)
library(rlang)
status_lookup <-
mdlibtoddh::get_ddh_records_status(mdlib_token = Sys.getenv('mdlib_token')) %>%
tibble::rownames_to_column(var = "row_num")
status_out  <-  status_lookup
View(status_out[1:3,])
View(get_lov_fields())
View(get_lovs())
temp_json <- create_json_dataset(values = list("field_wbddh_publisher_name" = "ALP AZIZ, TONY FUJS"))
temp_json
dkanr::get_url()
update_dataset(118257, body = temp_json)
View(status_out)
dkanr::get_url()
logout_ddh()
setwd("C:/Users/WB525812/cmder/Git Repos/ddhconnect")
devtools::build(vignettes = FALSE)
install.packages("C:/Users/WB525812/cmder/Git Repos/ddhconnect_0.1.0.tar.gz", repos = NULL, type="source")
remove.packages("ddhconnect", lib="~/R/win-library/3.5")
install.packages("C:/Users/WB525812/cmder/Git Repos/ddhconnect_0.1.0.tar.gz", repos = NULL, type="source")
library(eex2ddh)
library(dplyr)
library(magrittr)
library(tibble)
library(readr)
# dkanr_setup(url = "https://datacatalog.worldbank.org",
#             username = "dec_api_aa",
#             password = "*42wW9&W")
dkanr::dkanr_setup(url = "http://ddh1stg.prod.acquia-sites.com/",
username = "dec_api_aa",
password = "*42wW9&W")
# STEP 1: get EEX vs data catalog lookup ------------------------------
# using row numbers as id due to duplicates in eex_internal_id
status_lookup <- eex2ddh::get_ddh_records_status() %>%
tibble::rownames_to_column(var = "row_num")
# STEP 1: get EEX vs data catalog lookup ------------------------------
# using row numbers as id due to duplicates in eex_internal_id
status_lookup <- eex2ddh::get_ddh_records_status() %>%
tibble::rownames_to_column(var = "row_num")
status_out <- status_lookup
#add additional columns
status_out$date             <- NA
# run update existing datasets
eex_datasets_outdated <- status_lookup %>%
filter(status == "current",
sync_status == "out of sync",
duplicate_status == "original")
nrow(eex_datasets_outdated)
dkanr::get_url()
if (nrow(eex_datasets_outdated) > 0) {
# for (i in 1:nrow(eex_datasets_outdated)) {
for (i in 1:5) {
eex_internal_id <- eex_datasets_outdated[i, "eex_internal_id"]
row_num         <- eex_datasets_outdated[i, "row_num"]
out <- tryCatch(eex2ddh::update_existing_dataset(metadata_list = eex2ddh::extract_eex_metadata(eex_internal_id), master = eex_datasets_outdated),
error = function(e) {paste("ERROR: ", e$message)})
status_out[row_num, "harvest_message"]  <- stringr::str_replace_all(out, "[\r\n]+", " ")
status_out[row_num, "date"]             <- as.character(Sys.Date())
}
}
View(status_out)
status_out[1,]$harvest_message
i <-1
debugonce(update_existing_dataset)
eex_internal_id <- eex_datasets_outdated[i, "eex_internal_id"]
row_num         <- eex_datasets_outdated[i, "row_num"]
out <- tryCatch(eex2ddh::update_existing_dataset(metadata_list = eex2ddh::extract_eex_metadata(eex_internal_id), master = eex_datasets_outdated),
error = function(e) {paste("ERROR: ", e$message)})
metadata_dataset
eex2ddh::dataset_master_lookup
View(eex2ddh::dataset_master_lookup)
View(eex2ddh::dataset_master_lookup)
setwd("C:/Users/WB525812/cmder/Git Repos/eex2ddh")
devtools::document()
View(eex2ddh::dataset_master_lookup)
knitr::opts_chunk$set(echo = TRUE)
library(dkanr)
dkanr_setup(url = "https://datacatalog.worldbank.org",
username = "dec_api_aa",
password = "*42wW9&W")
library(dplyr)
library(jsonlite)
# Set production URL
production_root_url <- 'https://datacatalog.worldbank.org'
# Get ddh lov fields
ddh_lovs_df           <- ddhconnect::get_lovs(root_url = production_root_url)
# Metadata from flat files
eex_ddh_vocab_df      <- readxl::read_excel("./data-raw/controlled_vocab_mapping.xlsx")
basic_json_mapping    <- readxl::read_excel("./data-raw/eex_ddh_JSON_lookup_basic.xlsx")
constant_lookup       <- readxl::read_excel("./data-raw/constant_vocab_mapping.xlsx")
# Following fields are not present in ddhconnect::get_lovs()
ignore <- c(
"field_ddh_harvest_sys_id",
"title",
"body",
"field_wbddh_release_date",
"field_wbddh_end_date",
"field_ddh_external_contact_email",
"field_wbddh_start_date",
"field_wbddh_publisher_name",
"field_wbddh_source",
"field_wbddh_modified_date",
"body",
"title",
"field_upload"
)
# Check for invalid values (i.e values in machine_names that are not in ddh_lovs for non-free-text fields)
invalid_controlled_vocab  <- eex_ddh_vocab_df %>%
filter(!(machine_name %in% ignore)) %>%
anti_join(ddh_lovs_df, by = "machine_name")
invalid_constant  <- constant_lookup %>%
filter(machine_name != "field_wbddh_dsttl_upi" & machine_name != "field_wbddh_collaborator_upi" & machine_name !="field_collection_field") %>%
anti_join(ddh_lovs_df, by = "machine_name")
assertthat::assert_that(nrow(invalid_controlled_vocab) == 0, msg = 'Invalid values present in eex_ddh_vocab_df')
assertthat::assert_that(nrow(invalid_constant) == 0, msg = 'Invalid values present in constant_lookup')
# Merge controlled_vocab and constant lookups
master_basic_lookup  <- rbind(eex_ddh_vocab_df, constant_lookup)
# Add JSON fields
# The rows with NA as JSON fields have the constant metadata values
basic_json_mapping   <- basic_json_mapping %>% select(-Notes)
master_basic_lookup  <- master_basic_lookup %>% full_join(basic_json_mapping, by = c("machine_name","is_dataset"))
# Create lookup for both resource and dataset
dataset_master_lookup  <- master_basic_lookup %>% filter(is_dataset == TRUE) %>% select(-is_dataset)
resource_master_lookup <- master_basic_lookup %>% filter(is_dataset == FALSE) %>% select(-is_dataset)
devtools::use_data(dataset_master_lookup,
resource_master_lookup,
overwrite = TRUE)
devtools::document()
View(eex2ddh::dataset_master_lookup)
